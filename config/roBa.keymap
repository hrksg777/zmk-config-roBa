#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <150>;
    tapping-term-ms = <150>;
};

&trackball {
    // automouse-layer = <4>;

    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        quote {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <5 17>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <17 29>;
        };

        semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <6 18>;
            timeout-ms = <20>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <18 30>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <7 19>;
            timeout-ms = <20>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <19 31>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <4 14>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <14 26>;
        };

        underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <3 13>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <13 25>;
        };

        lt {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 12>;
        };

        gt {
            bindings = <&kp GREATER_THAN>;
            key-positions = <24 12>;
        };

        exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 11>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <11 23>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <1 3>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <13 11>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <23 25>;
        };

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 2>;
            timeout-ms = <20>;
        };

        rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
            timeout-ms = <20>;
        };

        lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <25 24>;
        };

        rbrc {
            bindings = <&kp RBRC>;
            key-positions = <30 31>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <27 26>;
        };

        amps {
            bindings = <&kp AMPERSAND>;
            key-positions = <0 10>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <10 22>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                       &kp W             &kp E            &kp R                   &kp T                                               &kp Y        &kp U  &kp I     &kp O     &kp P
&kp A                       &kp S             &kp D            &kp F                   &kp G        &mkp MB3                &kp DELETE     &kp H        &kp J  &kp K     &lt 5 L   &lt 3 MINUS
&kp Z                       &kp X             &kp C            &kp V                   &kp B        &kp AT_SIGN             &lt 4 PLUS     &kp N        &kp M  &mkp MB1  &mkp MB2  &lt 1 SLASH
&mt LC(LEFT_COMMAND) COMMA  &mt LEFT_ALT ESC  &mt LCTRL LANG2  &mt LEFT_COMMAND LANG1  &lt 1 SPACE  &mt LEFT_SHIFT TAB      &kp BACKSPACE  &lt 2 ENTER                             &mt LS(LEFT_COMMAND) PERIOD
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        layer_1 {
            bindings = <
&trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans                                &trans  &trans          &trans          &trans           &trans
&trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &kp LG(NUMBER_0)      &trans  &trans  &kp LEFT_ARROW  &kp UP_ARROW    &kp RIGHT_ARROW  &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans                &trans  &trans  &trans          &kp DOWN_ARROW  &trans           &trans
&trans  &trans        &kp N0        &trans        &trans  &trans                &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        layer_2 {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                            &kp HOME       &kp END               &kp PAGE_UP         &kp PAGE_DOWN          &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans           &trans  &kp LA(LG(H))  &kp LC(LEFT_ARROW)    &kp LC(UP_ARROW)    &kp LC(RIGHT_ARROW)    &trans
&kp F11  &kp F12  &trans  &trans  &trans   &trans           &trans  &kp LA(LG(L))  &kp LG(LEFT_BRACKET)  &kp LC(DOWN_ARROW)  &kp LG(RIGHT_BRACKET)  &trans
&trans   &trans   &trans  &trans  &trans   &kp LS(TAB)      &trans  &trans                                                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans         &trans                    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LA(LS(F))  &kp LS(LC(LG(NUMBER_4)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LG(W)      &trans                    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                   &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans        &trans          &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                    &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
